// Generated by the rpc compiler.  DO NOT EDIT!

package playerrpc

import (
	"foundation/framework/component"
	"foundation/framework/component/ifs"
	"foundation/framework/g"
	"foundation/message"
	"gitlab-ee.funplus.io/watcher/watcher/misc/wlog"

	"github.com/golang/protobuf/proto"
)

//RegisterPlayerService 玩家消息
func RegisterPlayerService(service RPCServicePlayer) {
	//Login 登录
	c := g.Root.GetComponent(component.NatsCom).(ifs.INatsComponent)
	c.RegisterEvent(20000,
		func(req *message.NatsRequest) message.Code {
			a := GetPlayer(req.Uid)
			if nil == a {
				wlog.Errorf("no found actor =%d, cmd =%d", req.Uid, req.Cmd)
				return message.Code_ActorNoFound
			}
			in := &message.CS_Login{}
			err := proto.Unmarshal(req.Data, in)
			if err != nil {
				wlog.Errorf("message.CS_Login Unmarshal error: %s", err.Error())
				return message.Code_NatsRequestUnmarshalError
			}
			r := service.Login(a, in)
			data, e := proto.Marshal(r)
			if e != nil {
				wlog.Errorf("message.SC_Login Unmarshal error:%s", e.Error())
				return message.Code_NatsReplyUnmarshalError
			}
			rep := &message.NatsReply{
				Uid:  req.Uid,
				Cmd:  req.Cmd,
				Data: data,
				Code: message.Code_OK,
			}
			c.Reply(req.ReplayUrl, rep)
			return message.Code_OK
		}, true)
}
